{"version":3,"sources":["Components/Table/index.js","Components/Checkbox.js","Components/Arrow.js","Components/Button.js","reducer.js","Utils/types.js","Components/Modal.js","Components/input.js","Pages/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Table","props","TableStyle","children","Row","RowStyle","HeaderCell","TableHeaderStyle","Body","Cell","style","TableCellStyle","styled","div","CheckBox","onChange","checked","type","ArrowStyle","i","Arrow","rotate","transform","ButtonStyle","button","Button","disabled","onClick","className","TableContext","createContext","TableProvider","Provider","tableReducer","state","action","data","forEach","el","id","isOpened","status","description","account","createdBy","createdOn","currency","console","log","res","filter","ModalContainer","ModalContent","ModalContentInner","ModalHeader","Modal","handleClose","TextField","label","name","value","FormColumnStyle","LabelStyle","InputStyle","input","defaultProps","treeArray","items","item","map","ParentNode","row","handlerToggle","handlerCheck","selectedRow","padding","paddingValue","column","uuidv4","ChildNode","paddingLeft","Width","length","PageStyle","ColumnStyle","ButtonListStyle","Home","context","useContext","undefined","Error","useTable","store","dispatch","useState","selectedRowData","setSelectedRowData","open","setOpen","inputFields","setInputFields","columns","handlerInputChange","e","target","Object","keys","App","useReducer","useEffect","axios","get","then","response","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAGMA,EAAQ,SAACC,GACb,OAAO,cAACC,EAAD,UAAaD,EAAME,YAG5BH,EAAMI,IAAM,gBAAED,EAAF,EAAEA,SAAF,OAAgB,cAACE,EAAD,UAAWF,KACvCH,EAAMM,WAAa,gBAAEH,EAAF,EAAEA,SAAF,OAAgB,cAACI,EAAD,UAAmBJ,KACtDH,EAAMQ,KAAO,gBAAEL,EAAF,EAAEA,SAAF,OAAgB,gCAAQA,KACrCH,EAAMS,KAAO,gBAAEN,EAAF,EAAEA,SAAUO,EAAZ,EAAYA,MAAZ,OAAuB,cAACC,EAAD,UAAgB,qBAAKD,MAAOA,EAAZ,SAAoBP,OAExE,I,IAAMD,EAAaU,IAAOC,IAAV,2CAIVR,EAAWO,IAAOC,IAAV,4DAKRN,EAAmBK,IAAOC,IAAV,sTAkBhBF,EAAiBC,IAAOC,IAAV,wYAuBLb,IC1DAc,EAFE,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAUC,EAAZ,EAAYA,QAAZ,OAAyB,uBAAOC,KAAK,WAAWD,QAASA,EAASD,SAAUA,K,QCGvFG,EAAaN,IAAOO,EAAV,gJAQDC,EAVD,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAAgB,cAACH,EAAD,CAAYR,MAAO,CAAEY,UAAWD,EAAM,iBAAaA,EAAb,QAA4B,qBCE1FE,EAAcX,IAAOY,OAAV,qVAmBFC,EArBA,SAAC,GAAD,IAAGtB,EAAH,EAAGA,SAAH,IAAac,YAAb,MAAoB,UAApB,EAA+BS,EAA/B,EAA+BA,SAA/B,IAAyCC,eAAzC,MAAmD,aAAnD,SAAkE,cAACJ,EAAD,CAAaG,SAAUA,EAAUE,UAAWX,EAAMU,QAASA,EAA3D,SAAqExB,K,QCDhJ0B,EAAeC,0BAERC,EAAgBF,EAAaG,SAUnC,SAASC,IAAkC,IAArBC,EAAoB,uDAAZ,GAAIC,EAAQ,uCAC/C,OAAQA,EAAOlB,MACb,IAAK,mBACH,OAAOkB,EAAOC,KAChB,IAAK,aAMH,OALAF,EAAMG,SAAQ,SAAAC,GACRA,EAAGC,KAAOJ,EAAOI,KACnBD,EAAGE,SAAWL,EAAOM,WAGlB,YAAIP,GACb,IAAK,oBAYH,OAXAA,EAAMG,SAAQ,SAAAC,GAQZ,OAPIA,EAAGC,KAAOJ,EAAOI,KACnBD,EAAGI,YAAcP,EAAOC,KAAKM,YAC7BJ,EAAGK,QAAUR,EAAOC,KAAKO,QACzBL,EAAGM,UAAYT,EAAOC,KAAKQ,UAC3BN,EAAGO,UAAYV,EAAOC,KAAKS,UAC3BP,EAAGQ,SAAWX,EAAOC,KAAKU,UAErBR,KAETS,QAAQC,IAAI,iBAAkBb,EAAOC,MAC9BF,EACT,IAAK,oBACH,IAAMe,EAAMf,EAAMgB,QAAO,SAAAZ,GAAE,OAAIA,EAAGC,KAAOJ,EAAOI,GAAGA,MAEnD,OADAQ,QAAQC,IAAI,iBAAkBb,EAAOI,IAC9BU,EACT,QACE,OAAOf,GC3CN,I,cCiBDiB,EAAiBvC,IAAOC,IAAV,sJAUduC,EAAexC,IAAOC,IAAV,yFAKZwC,EAAoBzC,IAAOC,IAAV,6CAGjByC,EAAc1C,IAAOC,IAAV,mJAQF0C,EAvCD,SAACtD,GACb,OAAO,cAACkD,EAAD,UACL,eAACC,EAAD,WACE,cAACE,EAAD,UACE,cAAC,EAAD,CAAQ3B,QAAS1B,EAAMuD,YAAvB,qBAEF,cAACH,EAAD,UACGpD,EAAME,iBCRTsD,EAAY,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,KAAM1C,EAA4B,EAA5BA,KAAMF,EAAsB,EAAtBA,SAAU6C,EAAY,EAAZA,MAChD,OAAO,eAACC,EAAD,WACL,cAACC,EAAD,UAAaJ,IACb,cAACK,EAAD,CACE9C,KAAMA,EACN2C,MAAOA,EACPD,KAAMA,EACN5C,SAAUA,QAIV8C,EAAkBjD,IAAOC,IAAV,mDAIfkD,EAAanD,IAAOoD,MAAV,6FAMVF,EAAalD,IAAO8C,MAAV,oEAKhBD,EAAUQ,aAAe,CACvBlD,SAAU,aACVE,KAAK,OACL2C,MAAM,GACND,KAAK,GACLD,MAAM,IAGOD,I,MAAAA,KCzBTS,GAAY,SAAZA,EAAaC,GAAD,IAAQ5B,EAAR,uDAAa,KAAb,OAChB4B,EACGjB,QAAO,SAAAkB,GAAI,OAAIA,EAAI,WAAiB7B,KACpC8B,KAAI,SAAAD,GAAI,kCAAUA,GAAV,IAAgBjE,SAAU+D,EAAUC,EAAOC,EAAK7B,UAGvD+B,GAAa,SAAC,GAAqE,IAAnEC,EAAkE,EAAlEA,IAAKC,EAA6D,EAA7DA,cAAeC,EAA8C,EAA9CA,aAAcC,EAAgC,EAAhCA,YAChDC,EADgF,EAAnBC,cACnC,EAChC,OAAOL,EAAIF,KAAI,SAAAQ,GAAM,OAAI,qBAAKjD,UAAU,OAAf,SACvB,cAAC,GAAD,CAAWiD,OAAQA,EAAQD,aAAcD,EAASH,cAAeA,EAAeC,aAAcA,EAAcC,YAAaA,KADvEI,mBAKhDC,GAAY,SAAC,GAAwE,IAAtEF,EAAqE,EAArEA,OAAQD,EAA6D,EAA7DA,aAAcJ,EAA+C,EAA/CA,cAAeC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YACtE,OAAO,qCACL,eAAC,EAAMtE,IAAP,WACE,cAAC,EAAMK,KAAP,UAAaoE,EAAOlC,SAAW,cAAC,EAAD,CAAU3B,QAAS0D,IAAgBG,EAAOtC,GAAIxB,SAAU,kBAAM0D,EAAaI,QAC1G,eAAC,EAAMpE,KAAP,CAAYC,MAAO,CAAEsE,YAAaJ,EAAcK,MAAO,OAAvD,UAAiEJ,EAAO1E,SAAS+E,OAAS,GAAK,cAAC,EAAD,CAAQjE,KAAM,WAAYU,QAAS,kBAAM6C,EAAcK,EAAOtC,GAAIsC,EAAOrC,WAAzE,SAAoF,cAAC,EAAD,CAAOnB,OAA4B,IAApBwD,EAAOrC,SAAiB,IAAM,OAAiBqC,EAAOnC,eACxP,cAAC,EAAMjC,KAAP,UAAaoE,EAAOlC,UACpB,cAAC,EAAMlC,KAAP,UAAaoE,EAAOhC,YACpB,cAAC,EAAMpC,KAAP,UAAaoE,EAAOjC,YACpB,cAAC,EAAMnC,KAAP,UAAaoE,EAAO/B,cAEpB+B,EAAO1E,UAAY0E,EAAO1E,SAAS+E,OAAS,GAA0B,IAApBL,EAAOrC,UAAkB,cAAC,GAAD,CAAY+B,IAAKM,EAAO1E,SAAUyE,aAAcA,EAAe,GAAIJ,cAAeA,EAAeC,aAAcA,EAAcC,YAAaA,QA2F3N,IAAMS,GAAYvE,IAAOC,IAAV,yFAMTuE,GAAcxE,IAAOC,IAAV,wLAYXwE,GAAkBzE,IAAOC,IAAV,0JAUNyE,GAnHf,WACE,MJlCK,WACL,IAAMC,EAAUC,qBAAW3D,GAC3B,QAAgB4D,IAAZF,EACF,MAAM,IAAIG,MAAM,SAElB,OAAOH,EI6BqBI,GAApBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACf,EAA8CC,mBAAS,IAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAwBF,oBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAsCJ,mBAAS,CAC7CnC,KAAM,GACNhB,QAAS,GACTE,UAAW,GACXD,UAAW,GACXE,SAAU,KALZ,mBAAOqD,EAAP,KAAoBC,EAApB,KAQA,EAAkBN,mBAAS,CACzB,CAAEnC,KAAM,eACR,CAAEA,KAAM,WACR,CAAEA,KAAM,cACR,CAAEA,KAAM,cACR,CAAEA,KAAM,cALH0C,EAAP,oBA6BMC,EAAqB,SAACC,GAC1BH,EAAe,2BACVD,GADS,kBAEXI,EAAEC,OAAO7C,KAAO4C,EAAEC,OAAO5C,UAS9B,OACE,qCACE,eAACuB,GAAD,WACE,eAACE,GAAD,WACE,cAAC,EAAD,CAAQ3D,SAAkD,IAAxC+E,OAAOC,KAAKX,GAAiBb,OAAcvD,QAAS,kBApB5EyE,EAAeL,QACfG,GAAQ,IAmBF,oBACA,cAAC,EAAD,CAAQxE,SAAkD,IAAxC+E,OAAOC,KAAKX,GAAiBb,OAAcvD,QAAS,WAzB5EkE,EAAS,CAAE5E,KHvEkB,oBGuEOsB,GAAIwD,KAyBlC,uBAEF,eAAC,EAAD,WACE,eAAC,EAAM3F,IAAP,WACE,cAAC,EAAME,WAAP,IACC+F,EAAQhC,KAAI,SAACQ,GAAD,OAAY,cAAC,EAAMvE,WAAP,UAAkCuE,EAAOlB,MAAlBmB,qBAElD,cAAC,GAAD,CACEP,IAAKL,GAAU0B,GACfnB,aA/CW,SAACrC,GAChB2D,EAAgBxD,KAAOH,EAAKG,GAC9ByD,EAAmB,IAEnBA,EAAmB5D,IA4CboC,cAxCY,SAACjC,EAAIE,GACzBoD,EAAS,CAAE5E,KHlEW,aGkEOsB,KAAIE,OAAUA,GAAqB,IAAXA,EAAoB,EAAJ,KAwC7DiC,YAAaqB,EAAgBxD,WAGlC0D,GACC,eAAC,EAAD,CAAOzC,YAAa,kBAAM0C,GAAQ,IAAlC,UACE,eAACd,GAAD,WACE,cAAC,GAAD,CAAW1B,MAAO,cAAeE,MAAOuC,EAAYzD,YAAa3B,SAAUuF,EAAoB3C,KAAK,gBACpG,cAAC,GAAD,CAAWD,MAAO,UAAWE,MAAOuC,EAAYxD,QAAS5B,SAAUuF,EAAoB3C,KAAK,YAC5F,cAAC,GAAD,CAAWD,MAAO,aAAcE,MAAOuC,EAAYtD,UAAW9B,SAAUuF,EAAoB3C,KAAK,YAAY1C,KAAK,SAClH,cAAC,GAAD,CAAWyC,MAAO,aAAcE,MAAOuC,EAAYvD,UAAW7B,SAAUuF,EAAoB3C,KAAK,cACjG,cAAC,GAAD,CAAWD,MAAO,WAAYE,MAAOuC,EAAYrD,SAAU/B,SAAUuF,EAAoB3C,KAAK,gBAEhG,cAAC,EAAD,CAAQhC,QAjCM,WACpBkE,EAAS,CAAE5E,KHrFkB,oBGqFOmB,KAAM+D,EAAa5D,GAAIwD,EAAgBxD,KAC3E2D,GAAQ,IA+BF,2B,oBC/FKS,OAlBf,WACE,MAA0BC,qBAAW3E,EAAc,IAAnD,mBAAO2D,EAAP,KAAcC,EAAd,KAQA,OANAgB,qBAAU,WACRC,KAAMC,IAFQ,4DAEKC,MAAK,SAACC,GACzBpB,EAAS,CAAE5E,KJZiB,mBIYOmB,KAAM6E,EAAS7E,OAClDW,QAAQC,IAAIiE,EAAS7E,WAEpB,IAED,cAACL,EAAD,CAAe6B,MAAO,CAAEgC,QAAOC,YAA/B,SACE,qBAAKjE,UAAU,OAAf,SACE,cAAC,GAAD,SCPOsF,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBJ,MAAK,YAAkD,IAA/CK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.2c2d3d0c.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Table = (props) => {\r\n  return <TableStyle>{props.children}</TableStyle>\r\n}\r\n\r\nTable.Row = ({children}) => <RowStyle>{children}</RowStyle>\r\nTable.HeaderCell = ({children}) => <TableHeaderStyle>{children}</TableHeaderStyle>\r\nTable.Body = ({children}) => <tbody>{children}</tbody>\r\nTable.Cell = ({children, style}) => <TableCellStyle><div style={style}>{children}</div></TableCellStyle>\r\n\r\nconst TableStyle = styled.div`\r\n  width:100%;\r\n`\r\n\r\nconst RowStyle = styled.div`\r\n  display:flex;\r\n  width:100%;\r\n`\r\n\r\nconst TableHeaderStyle = styled.div`\r\n  border:1px solid #c5c5c5;\r\n  background-color:#f6f4f4;\r\n  padding:8px 10px;\r\n  text-align:left;\r\n  font-size:11px;\r\n  font-weight:600;\r\n  flex:1;\r\n  &:first-child {\r\n    flex:0 0 35px;\r\n    max-width:35px;\r\n  }\r\n  &:nth-child(2) {\r\n    flex:0 0 350px;\r\n    max-width:350px;\r\n  }\r\n`\r\n\r\nconst TableCellStyle = styled.div`\r\n  flex:1;\r\n  border-left:1px solid #c5c5c5;\r\n  border-bottom:1px solid #c5c5c5;\r\n  &:last-child {\r\n    border-right:1px solid #c5c5c5;\r\n  }\r\n  padding:5px 10px;\r\n  &:first-child {\r\n    flex:0 0 35px;\r\n    max-width:35px;\r\n  }\r\n  &:nth-child(2) {\r\n    flex:0 0 350px;\r\n    max-width:350px;\r\n  }\r\n  &:nth-child(3) {\r\n    color:#0b45d1f0;\r\n    font-weight:600;\r\n  }\r\n`\r\n\r\n\r\nexport default Table;","import React from 'react'\r\n\r\nconst CheckBox = ({onChange, checked}) => <input type=\"checkbox\" checked={checked} onChange={onChange} />\r\n\r\nexport default CheckBox;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Arrow = ({ rotate }) => <ArrowStyle style={{ transform: rotate ? `rotate(${rotate}deg)` : \"rotate(-45deg)\" }} />\r\n\r\nconst ArrowStyle = styled.i`\r\n  border: solid #0b45d1f0;\r\n  border-width: 0 2px 2px 0;\r\n  display: inline-block;\r\n  padding: 2px;\r\n  color:blue;\r\n`\r\n\r\nexport default Arrow","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst Button = ({ children, type = \"primary\", disabled, onClick = () => {} }) => <ButtonStyle disabled={disabled} className={type} onClick={onClick}>{children}</ButtonStyle>\r\n\r\nconst ButtonStyle = styled.button`\r\n  border:none;\r\n  cursor:pointer;\r\n  &.primary {\r\n    background-color:#d18c8c;\r\n    font-size:10px;\r\n    padding:5px 15px;\r\n    text-transform:uppercase;\r\n    font-weight:bold;\r\n    min-width:50px;\r\n  }\r\n  &.stripped {\r\n    background-color:transparent;\r\n  }\r\n  &:disabled {\r\n    background-color:#f3e8e8;\r\n  }\r\n`\r\n\r\nexport default Button;","import { createContext, useContext } from 'react'\r\n\r\nconst TableContext = createContext()\r\n\r\nexport const TableProvider = TableContext.Provider\r\n\r\nexport function useTable() {\r\n  const context = useContext(TableContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"alert\");\r\n  }\r\n  return context;\r\n};\r\n\r\nexport function tableReducer(state = [], action) {\r\n  switch (action.type) {\r\n    case 'FETCH_TABLE_DATA':\r\n      return action.data\r\n    case 'SET_ACTIVE':\r\n      state.forEach(el => {\r\n        if (el.id === action.id) {\r\n          el.isOpened = action.status;\r\n        }\r\n      })\r\n      return [...state];\r\n    case 'UPDATE_TABLE_DATA':\r\n      state.forEach(el => {\r\n        if (el.id === action.id) {\r\n          el.description = action.data.description\r\n          el.account = action.data.account\r\n          el.createdBy = action.data.createdBy\r\n          el.createdOn = action.data.createdOn\r\n          el.currency = action.data.currency\r\n        }\r\n        return el;\r\n      })\r\n      console.log(\"Updated Row --\", action.data);\r\n      return state;\r\n    case 'DELETE_TABLE_DATA':\r\n      const res = state.filter(el => el.id !== action.id.id);\r\n      console.log(\"Deleted Row --\", action.id);\r\n      return res\r\n    default:\r\n      return state;\r\n  }\r\n}","export const FETCH_TABLE_DATA = \"FETCH_TABLE_DATA\"\r\nexport const DELETE_TABLE_DATA = \"DELETE_TABLE_DATA\"\r\nexport const SET_ACTIVE = \"SET_ACTIVE\"\r\nexport const UPDATE_TABLE_DATA = \"UPDATE_TABLE_DATA\"","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport Button from './Button';\r\n\r\nconst Modal = (props) => {\r\n  return <ModalContainer>\r\n    <ModalContent>\r\n      <ModalHeader>\r\n        <Button onClick={props.handleClose}>Close</Button>\r\n      </ModalHeader>\r\n      <ModalContentInner>\r\n        {props.children}\r\n      </ModalContentInner>\r\n    </ModalContent>\r\n  </ModalContainer>\r\n}\r\n\r\nconst ModalContainer = styled.div`\r\n  position:fixed;\r\n  background-color:rgba(0, 0, 0, 0.1);\r\n  left:0;\r\n  top:0;\r\n  right:0;\r\n  bottom:0;\r\n  padding:20px;\r\n`\r\n\r\nconst ModalContent = styled.div`\r\n  background-color:white;\r\n  width:600px;\r\n  margin:0 auto;\r\n`\r\nconst ModalContentInner = styled.div`\r\n  padding:20px;\r\n`\r\nconst ModalHeader = styled.div`\r\n  padding:10px 20px;\r\n  border-bottom:1px solid #e9e2e2;\r\n  width:100%;\r\n  display:flex;\r\n  justify-content:flex-end;\r\n`\r\n\r\nexport default Modal;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst TextField = ({ label, name, type, onChange, value }) => {\r\n  return <FormColumnStyle>\r\n    <LabelStyle>{label}</LabelStyle>\r\n    <InputStyle\r\n      type={type}\r\n      value={value}\r\n      name={name}\r\n      onChange={onChange} />\r\n  </FormColumnStyle>\r\n}\r\n\r\nconst FormColumnStyle = styled.div`\r\n  margin-bottom:10px;\r\n`\r\n\r\nconst InputStyle = styled.input`\r\n  width:100%;\r\n  padding:8px 10px;\r\n  border:1px solid #c9b6b6;\r\n`\r\n\r\nconst LabelStyle = styled.label`\r\n  padding-bottom:5px;\r\n  display:block\r\n`\r\n\r\nTextField.defaultProps = {\r\n  onChange: () => {},\r\n  type:\"text\",\r\n  value:\"\",\r\n  name:\"\",\r\n  label:\"\"\r\n}\r\n\r\nexport default TextField;","import React, { useState } from 'react'\r\nimport Table from '../../Components/Table';\r\nimport CheckBox from '../../Components/Checkbox';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Arrow from '../../Components/Arrow';\r\nimport Button from '../../Components/Button';\r\nimport { useTable } from '../../reducer';\r\nimport styled from 'styled-components';\r\nimport { DELETE_TABLE_DATA, SET_ACTIVE, UPDATE_TABLE_DATA } from '../../Utils/types';\r\nimport Modal from '../../Components/Modal';\r\nimport TextField from '../../Components/input';\r\n\r\nconst treeArray = (items, id = null) =>\r\n  items\r\n    .filter(item => item[\"parentId\"] === id)\r\n    .map(item => ({ ...item, children: treeArray(items, item.id) }));\r\n\r\n\r\nconst ParentNode = ({ row, handlerToggle, handlerCheck, selectedRow, paddingValue }) => {\r\n  const padding = paddingValue || 0\r\n  return row.map(column => <div className=\"test\" key={uuidv4()}>\r\n    <ChildNode column={column} paddingValue={padding} handlerToggle={handlerToggle} handlerCheck={handlerCheck} selectedRow={selectedRow} />\r\n  </div>)\r\n}\r\n\r\nconst ChildNode = ({ column, paddingValue, handlerToggle, handlerCheck, selectedRow }) => {\r\n  return <>\r\n    <Table.Row>\r\n      <Table.Cell>{column.account && <CheckBox checked={selectedRow === column.id} onChange={() => handlerCheck(column)} />}</Table.Cell>\r\n      <Table.Cell style={{ paddingLeft: paddingValue, Width: '30%' }}>{column.children.length > 0 && <Button type={\"stripped\"} onClick={() => handlerToggle(column.id, column.isOpened)}><Arrow rotate={column.isOpened === 1 ? 45 : -45} /></Button>}{column.description}</Table.Cell>\r\n      <Table.Cell>{column.account}</Table.Cell>\r\n      <Table.Cell>{column.createdOn}</Table.Cell>\r\n      <Table.Cell>{column.createdBy}</Table.Cell>\r\n      <Table.Cell>{column.currency}</Table.Cell>\r\n    </Table.Row>\r\n    {(column.children && column.children.length > 0) && column.isOpened === 1 && <ParentNode row={column.children} paddingValue={paddingValue + 20} handlerToggle={handlerToggle} handlerCheck={handlerCheck} selectedRow={selectedRow} />}\r\n  </>\r\n}\r\n\r\nfunction Home() {\r\n  const { store, dispatch } = useTable()\r\n  const [selectedRowData, setSelectedRowData] = useState({})\r\n  const [open, setOpen] = useState(false);\r\n  const [inputFields, setInputFields] = useState({\r\n    name: \"\",\r\n    account: \"\",\r\n    createdOn: \"\",\r\n    createdBy: \"\",\r\n    currency: \"\"\r\n  })\r\n\r\n  const [columns] = useState([\r\n    { name: 'Description' },\r\n    { name: 'Account' },\r\n    { name: 'Created On' },\r\n    { name: 'Created By' },\r\n    { name: 'Currency' }\r\n  ])\r\n\r\n  const handlerCheck = (data) => {\r\n    if (selectedRowData.id === data.id) {\r\n      setSelectedRowData({})\r\n    } else {\r\n      setSelectedRowData(data)\r\n    }\r\n  }\r\n\r\n  const handlerToggle = (id, status) => {\r\n    dispatch({ type: SET_ACTIVE, id, status: (!status || status === 0) ? 1 : 0 })\r\n  }\r\n\r\n  const handlerDelete = () => {\r\n    dispatch({ type: DELETE_TABLE_DATA, id: selectedRowData })\r\n  }\r\n\r\n  const handlerUpdate = () => {\r\n    setInputFields(selectedRowData)\r\n    setOpen(true)\r\n  }\r\n\r\n  const handlerInputChange = (e) => {\r\n    setInputFields({\r\n      ...inputFields,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const handlerSubmit = () => {\r\n    dispatch({ type: UPDATE_TABLE_DATA, data: inputFields, id: selectedRowData.id })\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageStyle>\r\n        <ButtonListStyle>\r\n          <Button disabled={Object.keys(selectedRowData).length === 0} onClick={() => handlerUpdate()}>Update</Button>\r\n          <Button disabled={Object.keys(selectedRowData).length === 0} onClick={() => handlerDelete()}>Delete</Button>\r\n        </ButtonListStyle>\r\n        <Table>\r\n          <Table.Row>\r\n            <Table.HeaderCell />\r\n            {columns.map((column) => <Table.HeaderCell key={uuidv4()}>{column.name}</Table.HeaderCell>)}\r\n          </Table.Row>\r\n          <ParentNode\r\n            row={treeArray(store)}\r\n            handlerCheck={handlerCheck}\r\n            handlerToggle={handlerToggle}\r\n            selectedRow={selectedRowData.id} />\r\n        </Table>\r\n      </PageStyle>\r\n      {open &&\r\n        <Modal handleClose={() => setOpen(false)}>\r\n          <ColumnStyle>\r\n            <TextField label={\"Description\"} value={inputFields.description} onChange={handlerInputChange} name=\"description\" />\r\n            <TextField label={\"Account\"} value={inputFields.account} onChange={handlerInputChange} name=\"account\" />\r\n            <TextField label={\"Created on\"} value={inputFields.createdOn} onChange={handlerInputChange} name=\"createdOn\" type=\"date\" />\r\n            <TextField label={\"Created by\"} value={inputFields.createdBy} onChange={handlerInputChange} name=\"createdBy\" />\r\n            <TextField label={\"Currency\"} value={inputFields.currency} onChange={handlerInputChange} name=\"currency\" />\r\n          </ColumnStyle>\r\n          <Button onClick={handlerSubmit}>Submit</Button>\r\n        </Modal>}\r\n    </>\r\n  );\r\n}\r\n\r\nconst PageStyle = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 1200px;\r\n  padding: 30px;  \r\n`;\r\n\r\nconst ColumnStyle = styled.div`\r\n  padding-bottom: 10px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin:0 -5px;\r\n  > div {\r\n    flex:0 0 50%;\r\n    max-width:50%;\r\n    padding:0 5px;\r\n  }\r\n`\r\n\r\nconst ButtonListStyle = styled.div`\r\n  display:flex;\r\n  width: 100%;\r\n  justify-content: flex-end;\r\n  margin-bottom:10px;\r\n  button {\r\n    margin-left:10px;\r\n  }\r\n`\r\n\r\nexport default Home;\r\n","import React, { useEffect, useReducer } from 'react'\n// import { tableData } from './data';\nimport Home from './Pages/Home/Home';\nimport { TableProvider, tableReducer } from './reducer';\nimport { FETCH_TABLE_DATA } from './Utils/types';\nimport axios from \"axios\";\n\nfunction App() {\n  const [store, dispatch] = useReducer(tableReducer, []);\n  const baseURL = \"https://mocki.io/v1/fd3cb8c5-b477-44fb-9de4-d00b8ab133e6\";\n  useEffect(() => {\n    axios.get(baseURL).then((response) => {\n    dispatch({ type: FETCH_TABLE_DATA, data: response.data });\n    console.log(response.data);\n    });\n  }, [])\n  return (\n    <TableProvider value={{ store, dispatch }}>\n      <div className=\"page\">\n        <Home />\n      </div>\n    </TableProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"./index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}